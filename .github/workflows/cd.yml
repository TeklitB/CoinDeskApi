name: Deployment

on:
  push:
    branches: [ main ]

env:
  DIR_ROOT: /home/runner/work/CoinDeskApi/CoinDeskApi

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: staging

    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      # Substitute appsetting variables' values
      - name: Override app settings variables
        uses: microsoft/variable-substitution@v1
        with:
          files: ${{ env.DIR_ROOT }}/src/CoinDeskWebApiApp/appsettings.json
        env:
          CoinDeskSettings.Url: ${{ vars.COINDESKURL }}

      # Login to Azure
      - name: Login to Azure
        uses: Azure/login@v1
        with:
          creds: '{"clientId":"${{ secrets.AZURE_CLIENT_ID }}","clientSecret":"${{ secrets.AZURE_CLIENT_SECRET }}","subscriptionId":"${{ secrets.AZURE_SUBSCRIPTION_ID }}","tenantId":"${{ secrets.AZURE_TENANT_ID }}"}'

      # Login to ACR
      - name: Login to ACR
        uses: azure/docker-login@v1
        with:
          login-server: ${{ vars.ACR_LOGIN_SERVER }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      # Build the image and push it to ACR
      - name: Build and push docker image
        id: build
        uses: docker/build-push-action@v5
        with:
          context: '.'
          push: 'true'
          tags: ${{ vars.ACR_LOGIN_SERVER }}/${{ vars.ACR_REPO_NAME }}:${{ github.sha }}
          file: './Dockerfile'           

      # Use kubelogin to configure your kubeconfig for Azure auth
      - name: Set up kubelogin for non-interactive login
        uses: azure/use-kubelogin@v1
        with:
          kubelogin-version: 'v0.1.1'

      # Retrieve Azure Kubernetes Service cluster's kubeconfig file
      - name: Azure Kubernetes set context
        uses: azure/aks-set-context@v3
        with:
           resource-group: ${{ secrets.RESOURCE_GROUP }}
           cluster-name: ${{ secrets.CLUSTER_NAME }}
           admin: 'false'
           use-kubelogin: 'true'

      # Deploy application to AKS based on given manifest file
      - name: Deploys application
        uses: Azure/k8s-deploy@v4
        with:
          action: deploy
          manifests: |
            manifests/deployment.yml
            manifests/service.yml
          images: ${{ vars.ACR_LOGIN_SERVER }}.azurecr.io/${{ vars.ACR_REPO_NAME }}:${{ github.sha }}
